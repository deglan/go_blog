package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.65

import (
	"context"
	"social/graph/model"
	"time"
)

// TrendingTags is the resolver for the trendingTags field.
func (r *queryResolver) TrendingTags(ctx context.Context, limit int32) ([]*model.Tag, error) {
	tags, err := r.MongoStore.Tags.GetTrendingTags(ctx, int(limit))
	if err != nil {
		return nil, err
	}

	var result []*model.Tag
	for _, tag := range tags {
		var lastUsed *string
		if !tag.LastUsed.IsZero() {
			formattedTime := tag.LastUsed.Format(time.RFC3339)
			lastUsed = &formattedTime
		}
		result = append(result, &model.Tag{
			Name:     tag.ID,
			Count:    int32(tag.Count),
			LastUsed: lastUsed,
		})
	}

	return result, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
